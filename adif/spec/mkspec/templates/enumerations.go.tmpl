// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file was generated by mkspec; DO NOT EDIT
// Source: {{.Source}}
// ADIF specification version {{.Version}} {{.Status}} {{.Created}}

package spec

{{range .Enumerations.Enums}}
{{- with $enum := . -}}
type {{$enum.TypeIdentifier}} struct {
{{- range .Header.Values}}
	{{upperCamel .}} string
{{- end}}
}

func (e {{.TypeIdentifier}}) Property(name string) string {
	switch name {
		default: return ""
		{{- range $enum.Header.Values}}
		case {{printf "%q" .}}: return e.{{upperCamel .}}
		{{- end}}
	}
}

func (e {{.TypeIdentifier}}) String() string {
	return e.{{with $name := index .Header.Values 1}}{{upperCamel $name}}{{end}}
}

// {{.TypeIdentifier}} values.
var (
{{- range .Records}}
	{{$enum.ValueIdentifier .}} = {{$enum.TypeIdentifier}}{
		{{- range slice .Values}}
		{{upperCamel .Name}}: {{.Val | printf "%q"}},
		{{- end}}
	}
{{- end}}
)

var {{upperCamel .Name}}Enumeration = Enumeration{
	Name: {{printf "%q" .Name}},
	Properties: []string{
		{{- range .Header.Values}}
		{{printf "%q" .}},
		{{- end}}
	},
	Values: []EnumValue{
	{{- range .Records}}
		{{$enum.ValueIdentifier .}},
	{{- end}}
	},
}
{{end}}
{{end}}
func init() {
{{- range .Enumerations.Enums}}
	Enumerations[{{printf "%q" .Name}}] = {{upperCamel .Name}}Enumeration
{{- end}}
}
