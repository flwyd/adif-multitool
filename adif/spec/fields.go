// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file was generated by mkspec; DO NOT EDIT
// Source: https://adif.org.uk/314/ADIF_314_released_exports_2022_12_06.zip
// ADIF specification version 3.1.4 Released 2022-12-06T22:03:52Z

package spec

var (
	// AdifVerField is a String, identifies the version of ADIF used in this file in the format X.Y.Z where X is an integer designating the ADIF epoch Y is an integer between 0 and 9 designating the major version Z is an integer between 0 and 9 designating the minor version.
	AdifVerField = Field{
		Name:   "ADIF_VER",
		Type:   StringDataType,
		Header: true,
	}
	// CreatedTimestampField is a String, identifies the UTC date and time that the file was created in the format of 15 characters YYYYMMDD HHMMSS where YYYYMMDD is a Date data type HHMMSS is a 6 character Time data type.
	CreatedTimestampField = Field{
		Name:   "CREATED_TIMESTAMP",
		Type:   StringDataType,
		Header: true,
	}
	// ProgramidField is a String, identifies the name of the logger, converter, or utility that created or processed this ADIF file.
	ProgramidField = Field{
		Name:   "PROGRAMID",
		Type:   StringDataType,
		Header: true,
	}
	// ProgramversionField is a String, identifies the version of the logger, converter, or utility that created or processed this ADIF file.
	ProgramversionField = Field{
		Name:   "PROGRAMVERSION",
		Type:   StringDataType,
		Header: true,
	}
	// UserdefnField is a String, specifies the name and optional enumeration or range of the nth user-defined field, where n is a positive integer The name of a user-defined field may not be an ADIF Field name The name of a user-defined field may not contain a comma a colon an open-angle-bracket or close-angle-bracket character an open-curly-bracket or close-curly-bracket character The name of a user-defined field may not begin or end with a space character.
	UserdefnField = Field{
		Name:   "USERDEFn",
		Type:   StringDataType,
		Header: true,
	}
	// AddressField is a MultilineString, the contacted station's complete mailing address: full name, street address, city, postal code, and country.
	AddressField = Field{
		Name: "ADDRESS",
		Type: MultilineStringDataType,
	}
	// AddressIntlField is a IntlMultilineString, the contacted station's complete mailing address: full name, street address, city, postal code, and country.
	AddressIntlField = Field{
		Name: "ADDRESS_INTL",
		Type: IntlMultilineStringDataType,
	}
	// AgeField is a Number, the contacted station's operator's age in years in the range 0 to 120 (inclusive).
	AgeField = Field{
		Name:    "AGE",
		Type:    NumberDataType,
		Minimum: "0",
		Maximum: "120",
	}
	// AltitudeField is a Number, the height of the contacted station in meters relative to Mean Sea Level (MSL). For example 1.5 km is <ALTITUDE:4>1500 and 10.5 m is <ALTITUDE:4>10.5.
	AltitudeField = Field{
		Name: "ALTITUDE",
		Type: NumberDataType,
	}
	// AntAzField is a Number, the logging station's antenna azimuth, in degrees with a value between 0 to 360 (inclusive). Values outside this range are import-only and must be normalized for export (e.g. 370 is exported as 10). True north is 0 degrees with values increasing in a clockwise direction..
	AntAzField = Field{
		Name:    "ANT_AZ",
		Type:    NumberDataType,
		Minimum: "0",
		Maximum: "360",
	}
	// AntElField is a Number, the logging station's antenna elevation, in degrees with a value between -90 to 90 (inclusive). Values outside this range are import-only and must be normalized for export (e.g. 100 is exported as 80). The horizon is 0 degrees with values increasing as the angle moves in an upward direction..
	AntElField = Field{
		Name:    "ANT_EL",
		Type:    NumberDataType,
		Minimum: "-90",
		Maximum: "90",
	}
	// AntPathField is a Enumeration, the signal path.
	AntPathField = Field{
		Name:     "ANT_PATH",
		Type:     EnumerationDataType,
		EnumName: "Ant_Path",
	}
	// ArrlSectField is a Enumeration, the contacted station's ARRL section.
	ArrlSectField = Field{
		Name:     "ARRL_SECT",
		Type:     EnumerationDataType,
		EnumName: "ARRL_Section",
	}
	// AwardSubmittedField is a SponsoredAwardList, the list of awards submitted to a sponsor. note that this field might not be used in a QSO record. It might be used to convey information about a user's "Award Account" between an award sponsor and the user. For example, AA6YQ might submit a request for awards by sending the following: <CALL:5>AA6YQ <AWARD_SUBMITTED:64>ADIF_CENTURY_BASIC,ADIF_CENTURY_SILVER,ADIF_SPECTRUM_100-160m.
	AwardSubmittedField = Field{
		Name:     "AWARD_SUBMITTED",
		Type:     SponsoredAwardListDataType,
		EnumName: "Award_Sponsor",
	}
	// AwardGrantedField is a SponsoredAwardList, the list of awards granted by a sponsor. note that this field might not be used in a QSO record. It might be used to convey information about a user's "Award Account" between an award sponsor and the user. For example, in response to a request "send me a list of the awards granted to AA6YQ", this might be received: <CALL:5>AA6YQ <AWARD_GRANTED:64>ADIF_CENTURY_BASIC,ADIF_CENTURY_SILVER,ADIF_SPECTRUM_100-160m.
	AwardGrantedField = Field{
		Name:     "AWARD_GRANTED",
		Type:     SponsoredAwardListDataType,
		EnumName: "Award_Sponsor",
	}
	// AIndexField is a Number, the geomagnetic A index at the time of the QSO in the range 0 to 400 (inclusive).
	AIndexField = Field{
		Name:    "A_INDEX",
		Type:    NumberDataType,
		Minimum: "0",
		Maximum: "400",
	}
	// BandField is a Enumeration, QSO Band.
	BandField = Field{
		Name:     "BAND",
		Type:     EnumerationDataType,
		EnumName: "Band",
	}
	// BandRxField is a Enumeration, in a split frequency QSO, the logging station's receiving band.
	BandRxField = Field{
		Name:     "BAND_RX",
		Type:     EnumerationDataType,
		EnumName: "Band",
	}
	// CallField is a String, the contacted station's callsign.
	CallField = Field{
		Name: "CALL",
		Type: StringDataType,
	}
	// CheckField is a String, contest check (e.g. for ARRL Sweepstakes).
	CheckField = Field{
		Name: "CHECK",
		Type: StringDataType,
	}
	// ClassField is a String, contest class (e.g. for ARRL Field Day).
	ClassField = Field{
		Name: "CLASS",
		Type: StringDataType,
	}
	// ClublogQsoUploadDateField is a Date, the date the QSO was last uploaded to the Club Log online service.
	ClublogQsoUploadDateField = Field{
		Name: "CLUBLOG_QSO_UPLOAD_DATE",
		Type: DateDataType,
	}
	// ClublogQsoUploadStatusField is a Enumeration, the upload status of the QSO on the Club Log online service.
	ClublogQsoUploadStatusField = Field{
		Name:     "CLUBLOG_QSO_UPLOAD_STATUS",
		Type:     EnumerationDataType,
		EnumName: "QSO_Upload_Status",
	}
	// CntyField is a Enumeration, the contacted station's Secondary Administrative Subdivision (e.g. US county, JA Gun), in the specified format.
	CntyField = Field{
		Name:      "CNTY",
		Type:      EnumerationDataType,
		EnumName:  "Secondary_Administrative_Subdivision",
		EnumScope: "DXCC",
	}
	// CommentField is a String, comment field for QSO recommended use: information of interest to the contacted station's operator.
	CommentField = Field{
		Name: "COMMENT",
		Type: StringDataType,
	}
	// CommentIntlField is a IntlString, comment field for QSO recommended use: information of interest to the contacted station's operator.
	CommentIntlField = Field{
		Name: "COMMENT_INTL",
		Type: IntlStringDataType,
	}
	// ContField is a Enumeration, the contacted station's Continent.
	ContField = Field{
		Name:     "CONT",
		Type:     EnumerationDataType,
		EnumName: "Continent",
	}
	// ContactedOpField is a String, the callsign of the individual operating the contacted station.
	ContactedOpField = Field{
		Name: "CONTACTED_OP",
		Type: StringDataType,
	}
	// ContestIdField is a String, QSO Contest Identifier use enumeration values for interoperability.
	ContestIdField = Field{
		Name:     "CONTEST_ID",
		Type:     StringDataType,
		EnumName: "Contest_ID",
	}
	// CountryField is a String, the contacted station's DXCC entity name.
	CountryField = Field{
		Name: "COUNTRY",
		Type: StringDataType,
	}
	// CountryIntlField is a IntlString, the contacted station's DXCC entity name.
	CountryIntlField = Field{
		Name: "COUNTRY_INTL",
		Type: IntlStringDataType,
	}
	// CqzField is a PositiveInteger, the contacted station's CQ Zone in the range 1 to 40 (inclusive).
	CqzField = Field{
		Name:    "CQZ",
		Type:    PositiveIntegerDataType,
		Minimum: "1",
		Maximum: "40",
	}
	// CreditSubmittedField is a CreditList,AwardList, the list of credits sought for this QSO Use of data type AwardList and enumeration Award are import-only.
	CreditSubmittedField = Field{
		Name:     "CREDIT_SUBMITTED",
		Type:     CreditListDataType,
		EnumName: "Credit",
	}
	// CreditGrantedField is a CreditList,AwardList, the list of credits granted to this QSO Use of data type AwardList and enumeration Award are import-only.
	CreditGrantedField = Field{
		Name:     "CREDIT_GRANTED",
		Type:     CreditListDataType,
		EnumName: "Credit",
	}
	// DarcDokField is a Enumeration, the contacted station's DARC DOK (District Location Code) A DOK comprises letters and numbers, e.g. <DARC_DOK:3>A01.
	DarcDokField = Field{
		Name: "DARC_DOK",
		Type: EnumerationDataType,
	}
	// DistanceField is a Number, the distance between the logging station and the contacted station in kilometers via the specified signal path with a value greater than or equal to 0.
	DistanceField = Field{
		Name:    "DISTANCE",
		Type:    NumberDataType,
		Minimum: "0",
	}
	// DxccField is a Enumeration, the contacted station's DXCC Entity Code <DXCC:1>0 means that the contacted station is known not to be within a DXCC entity..
	DxccField = Field{
		Name:     "DXCC",
		Type:     EnumerationDataType,
		EnumName: "DXCC_Entity_Code",
	}
	// EmailField is a String, the contacted station's email address.
	EmailField = Field{
		Name: "EMAIL",
		Type: StringDataType,
	}
	// EqCallField is a String, the contacted station's owner's callsign.
	EqCallField = Field{
		Name: "EQ_CALL",
		Type: StringDataType,
	}
	// EqslQslrdateField is a Date, date QSL received from eQSL.cc (only valid if EQSL_QSL_RCVD is Y, I, or V)(V import-only).
	EqslQslrdateField = Field{
		Name: "EQSL_QSLRDATE",
		Type: DateDataType,
	}
	// EqslQslsdateField is a Date, date QSL sent to eQSL.cc (only valid if EQSL_QSL_SENT is Y, Q, or I).
	EqslQslsdateField = Field{
		Name: "EQSL_QSLSDATE",
		Type: DateDataType,
	}
	// EqslQslRcvdField is a Enumeration, eQSL.cc QSL received status instead of V (import-only) use <CREDIT_GRANTED:42>CQWAZ:eqsl,CQWAZ_BAND:eqsl,CQWAZ_MODE:eqsl Default Value: N.
	EqslQslRcvdField = Field{
		Name:     "EQSL_QSL_RCVD",
		Type:     EnumerationDataType,
		EnumName: "QSL_Rcvd",
	}
	// EqslQslSentField is a Enumeration, eQSL.cc QSL sent status Default Value: N.
	EqslQslSentField = Field{
		Name:     "EQSL_QSL_SENT",
		Type:     EnumerationDataType,
		EnumName: "QSL_Sent",
	}
	// FistsField is a PositiveInteger, the contacted station's FISTS CW Club member number with a value greater than 0..
	FistsField = Field{
		Name:    "FISTS",
		Type:    PositiveIntegerDataType,
		Minimum: "1",
	}
	// FistsCcField is a PositiveInteger, the contacted station's FISTS CW Club Century Certificate (CC) number with a value greater than 0..
	FistsCcField = Field{
		Name:    "FISTS_CC",
		Type:    PositiveIntegerDataType,
		Minimum: "1",
	}
	// ForceInitField is a Boolean, new EME "initial".
	ForceInitField = Field{
		Name: "FORCE_INIT",
		Type: BooleanDataType,
	}
	// FreqField is a Number, QSO frequency in Megahertz.
	FreqField = Field{
		Name: "FREQ",
		Type: NumberDataType,
	}
	// FreqRxField is a Number, in a split frequency QSO, the logging station's receiving frequency in Megahertz.
	FreqRxField = Field{
		Name: "FREQ_RX",
		Type: NumberDataType,
	}
	// GridsquareField is a GridSquare, the contacted station's 2-character, 4-character, 6-character, or 8-character Maidenhead Grid Square For 10 or 12 character locators, store the first 8 characters in GRIDSQUARE and the additional 2 or 4 characters in the GRIDSQUARE_EXT field.
	GridsquareField = Field{
		Name: "GRIDSQUARE",
		Type: GridSquareDataType,
	}
	// GridsquareExtField is a GridSquareExt, for a contacted station's 10-character Maidenhead locator, supplements the GRIDSQUARE field by containing characters 9 and 10. For a contacted station's 12-character Maidenhead locator, supplements the GRIDSQUARE field by containing characters 9, 10, 11 and 12. Characters 9 and 10 are case-insensitive ASCII letters in the range A-X. Characters 11 and 12 are Digits in the range 0 to 9. On export, the field length must be 2 or 4. On import, if the field length is greater than 4, the additional characters must be ignored. Example of exporting the 10-character locator FN01MH42BQ: <GRIDSQUARE:8>FN01MH42 <GRIDSQUARE_EXT:2>BQ.
	GridsquareExtField = Field{
		Name: "GRIDSQUARE_EXT",
		Type: GridSquareExtDataType,
	}
	// GuestOpField is a String, import-only: use OPERATOR instead.
	GuestOpField = Field{
		Name:       "GUEST_OP",
		Type:       StringDataType,
		ImportOnly: true,
	}
	// HamlogeuQsoUploadDateField is a Date, the date the QSO was last uploaded to the HAMLOG.EU online service.
	HamlogeuQsoUploadDateField = Field{
		Name: "HAMLOGEU_QSO_UPLOAD_DATE",
		Type: DateDataType,
	}
	// HamlogeuQsoUploadStatusField is a Enumeration, the upload status of the QSO on the HAMLOG.EU online service.
	HamlogeuQsoUploadStatusField = Field{
		Name:     "HAMLOGEU_QSO_UPLOAD_STATUS",
		Type:     EnumerationDataType,
		EnumName: "QSO_Upload_Status",
	}
	// HamqthQsoUploadDateField is a Date, the date the QSO was last uploaded to the HamQTH.com online service.
	HamqthQsoUploadDateField = Field{
		Name: "HAMQTH_QSO_UPLOAD_DATE",
		Type: DateDataType,
	}
	// HamqthQsoUploadStatusField is a Enumeration, the upload status of the QSO on the HamQTH.com online service.
	HamqthQsoUploadStatusField = Field{
		Name:     "HAMQTH_QSO_UPLOAD_STATUS",
		Type:     EnumerationDataType,
		EnumName: "QSO_Upload_Status",
	}
	// HrdlogQsoUploadDateField is a Date, the date the QSO was last uploaded to the HRDLog.net online service.
	HrdlogQsoUploadDateField = Field{
		Name: "HRDLOG_QSO_UPLOAD_DATE",
		Type: DateDataType,
	}
	// HrdlogQsoUploadStatusField is a Enumeration, the upload status of the QSO on the HRDLog.net online service.
	HrdlogQsoUploadStatusField = Field{
		Name:     "HRDLOG_QSO_UPLOAD_STATUS",
		Type:     EnumerationDataType,
		EnumName: "QSO_Upload_Status",
	}
	// IotaField is a IOTARefNo, the contacted station's IOTA designator, in format CC-XXX, where CC is a member of the Continent enumeration XXX is the island group designator, where 1 <= XXX <= 999 [use leading zeroes].
	IotaField = Field{
		Name: "IOTA",
		Type: IOTARefNoDataType,
	}
	// IotaIslandIdField is a PositiveInteger, the contacted station's IOTA Island Identifier, an 8-digit integer in the range 1 to 99999999 [leading zeroes optional].
	IotaIslandIdField = Field{
		Name:    "IOTA_ISLAND_ID",
		Type:    PositiveIntegerDataType,
		Minimum: "1",
		Maximum: "99999999",
	}
	// ItuzField is a PositiveInteger, the contacted station's ITU zone in the range 1 to 90 (inclusive).
	ItuzField = Field{
		Name:    "ITUZ",
		Type:    PositiveIntegerDataType,
		Minimum: "1",
		Maximum: "90",
	}
	// KIndexField is a Integer, the geomagnetic K index at the time of the QSO in the range 0 to 9 (inclusive).
	KIndexField = Field{
		Name:    "K_INDEX",
		Type:    IntegerDataType,
		Minimum: "0",
		Maximum: "9",
	}
	// LatField is a Location, the contacted station's latitude.
	LatField = Field{
		Name: "LAT",
		Type: LocationDataType,
	}
	// LonField is a Location, the contacted station's longitude.
	LonField = Field{
		Name: "LON",
		Type: LocationDataType,
	}
	// LotwQslrdateField is a Date, date QSL received from ARRL Logbook of the World (only valid if LOTW_QSL_RCVD is Y, I, or V)(V import-only).
	LotwQslrdateField = Field{
		Name: "LOTW_QSLRDATE",
		Type: DateDataType,
	}
	// LotwQslsdateField is a Date, date QSL sent to ARRL Logbook of the World (only valid if LOTW_QSL_SENT is Y, Q, or I).
	LotwQslsdateField = Field{
		Name: "LOTW_QSLSDATE",
		Type: DateDataType,
	}
	// LotwQslRcvdField is a Enumeration, ARRL Logbook of the World QSL received status instead of V (import-only) use <CREDIT_GRANTED:39>DXCC:lotw,DXCC_BAND:lotw,DXCC_MODE:lotw Default Value: N.
	LotwQslRcvdField = Field{
		Name:     "LOTW_QSL_RCVD",
		Type:     EnumerationDataType,
		EnumName: "QSL_Rcvd",
	}
	// LotwQslSentField is a Enumeration, ARRL Logbook of the World QSL sent status Default Value: N.
	LotwQslSentField = Field{
		Name:     "LOTW_QSL_SENT",
		Type:     EnumerationDataType,
		EnumName: "QSL_Sent",
	}
	// MaxBurstsField is a Number, maximum length of meteor scatter bursts heard by the logging station, in seconds with a value greater than or equal to 0.
	MaxBurstsField = Field{
		Name:    "MAX_BURSTS",
		Type:    NumberDataType,
		Minimum: "0",
	}
	// ModeField is a Enumeration, QSO Mode.
	ModeField = Field{
		Name:     "MODE",
		Type:     EnumerationDataType,
		EnumName: "Mode",
	}
	// MsShowerField is a String, For Meteor Scatter QSOs, the name of the meteor shower in progress.
	MsShowerField = Field{
		Name: "MS_SHOWER",
		Type: StringDataType,
	}
	// MyAltitudeField is a Number, the height of the logging station in meters relative to Mean Sea Level (MSL). For example 1.5 km is <MY_ALTITUDE:4>1500 and 10.5 m is <MY_ALTITUDE:4>10.5.
	MyAltitudeField = Field{
		Name: "MY_ALTITUDE",
		Type: NumberDataType,
	}
	// MyAntennaField is a String, the logging station's antenna.
	MyAntennaField = Field{
		Name: "MY_ANTENNA",
		Type: StringDataType,
	}
	// MyAntennaIntlField is a IntlString, the logging station's antenna.
	MyAntennaIntlField = Field{
		Name: "MY_ANTENNA_INTL",
		Type: IntlStringDataType,
	}
	// MyArrlSectField is a Enumeration, the logging station's ARRL section.
	MyArrlSectField = Field{
		Name:     "MY_ARRL_SECT",
		Type:     EnumerationDataType,
		EnumName: "ARRL_Section",
	}
	// MyCityField is a String, the logging station's city.
	MyCityField = Field{
		Name: "MY_CITY",
		Type: StringDataType,
	}
	// MyCityIntlField is a IntlString, the logging station's city.
	MyCityIntlField = Field{
		Name: "MY_CITY_INTL",
		Type: IntlStringDataType,
	}
	// MyCntyField is a Enumeration, the logging station's Secondary Administrative Subdivision (e.g. US county, JA Gun), in the specified format.
	MyCntyField = Field{
		Name:      "MY_CNTY",
		Type:      EnumerationDataType,
		EnumName:  "Secondary_Administrative_Subdivision",
		EnumScope: "MY_DXCC",
	}
	// MyCountryField is a String, the logging station's DXCC entity name.
	MyCountryField = Field{
		Name:     "MY_COUNTRY",
		Type:     StringDataType,
		EnumName: "Country",
	}
	// MyCountryIntlField is a IntlString, the logging station's DXCC entity name.
	MyCountryIntlField = Field{
		Name:     "MY_COUNTRY_INTL",
		Type:     IntlStringDataType,
		EnumName: "Country",
	}
	// MyCqZoneField is a PositiveInteger, the logging station's CQ Zone in the range 1 to 40 (inclusive).
	MyCqZoneField = Field{
		Name:    "MY_CQ_ZONE",
		Type:    PositiveIntegerDataType,
		Minimum: "1",
		Maximum: "40",
	}
	// MyDxccField is a Enumeration, the logging station's DXCC Entity Code <MY_DXCC:1>0 means that the logging station is known not to be within a DXCC entity..
	MyDxccField = Field{
		Name:     "MY_DXCC",
		Type:     EnumerationDataType,
		EnumName: "DXCC_Entity_Code",
	}
	// MyFistsField is a PositiveInteger, the logging station's FISTS CW Club member number with a value greater than 0..
	MyFistsField = Field{
		Name:    "MY_FISTS",
		Type:    PositiveIntegerDataType,
		Minimum: "1",
	}
	// MyGridsquareField is a GridSquare, the logging station's 2-character, 4-character, 6-character, or 8-character Maidenhead Grid Square For 10 or 12 character locators, store the first 8 characters in MY_GRIDSQUARE and the additional 2 or 4 characters in the MY_GRIDSQUARE_EXT field.
	MyGridsquareField = Field{
		Name: "MY_GRIDSQUARE",
		Type: GridSquareDataType,
	}
	// MyGridsquareExtField is a GridSquareExt, for a logging station's 10-character Maidenhead locator, supplements the MY_GRIDSQUARE field by containing characters 9 and 10. For a logging station's 12-character Maidenhead locator, supplements the MY_GRIDSQUARE field by containing characters 9, 10, 11 and 12. Characters 9 and 10 are case-insensitive ASCII letters in the range A-X. Characters 11 and 12 are Digits in the range 0 to 9. On export, the field length must be 2 or 4. On import, if the field length is greater than 4, the additional characters must be ignored. Example of exporting the 10-character locator FN01MH42BQ: <MY_GRIDSQUARE:8>FN01MH42 <MY_GRIDSQUARE_EXT:2>BQ.
	MyGridsquareExtField = Field{
		Name: "MY_GRIDSQUARE_EXT",
		Type: GridSquareExtDataType,
	}
	// MyIotaField is a IOTARefNo, the logging station's IOTA designator, in format CC-XXX, where CC is a member of the Continent enumeration XXX is the island group designator, where 1 <= XXX <= 999 [use leading zeroes].
	MyIotaField = Field{
		Name: "MY_IOTA",
		Type: IOTARefNoDataType,
	}
	// MyIotaIslandIdField is a PositiveInteger, the logging station's IOTA Island Identifier, an 8-digit integer in the range 1 to 99999999 [leading zeroes optional].
	MyIotaIslandIdField = Field{
		Name:    "MY_IOTA_ISLAND_ID",
		Type:    PositiveIntegerDataType,
		Minimum: "1",
		Maximum: "99999999",
	}
	// MyItuZoneField is a PositiveInteger, the logging station's ITU zone in the range 1 to 90 (inclusive).
	MyItuZoneField = Field{
		Name:    "MY_ITU_ZONE",
		Type:    PositiveIntegerDataType,
		Minimum: "1",
		Maximum: "90",
	}
	// MyLatField is a Location, the logging station's latitude.
	MyLatField = Field{
		Name: "MY_LAT",
		Type: LocationDataType,
	}
	// MyLonField is a Location, the logging station's longitude.
	MyLonField = Field{
		Name: "MY_LON",
		Type: LocationDataType,
	}
	// MyNameField is a String, the logging operator's name.
	MyNameField = Field{
		Name: "MY_NAME",
		Type: StringDataType,
	}
	// MyNameIntlField is a IntlString, the logging operator's name.
	MyNameIntlField = Field{
		Name: "MY_NAME_INTL",
		Type: IntlStringDataType,
	}
	// MyPostalCodeField is a String, the logging station's postal code.
	MyPostalCodeField = Field{
		Name: "MY_POSTAL_CODE",
		Type: StringDataType,
	}
	// MyPostalCodeIntlField is a IntlString, the logging station's postal code.
	MyPostalCodeIntlField = Field{
		Name: "MY_POSTAL_CODE_INTL",
		Type: IntlStringDataType,
	}
	// MyPotaRefField is a POTARefList, a comma-delimited list of one or more of the logging station's POTA (Parks on the Air) reference(s). Examples: <MY_POTA_REF:6>K-0059 <MY_POTA_REF:7>K-10000 <MY_POTA_REF:40>K-0817,K-4566,K-4576,K-4573,K-4578@US-WY.
	MyPotaRefField = Field{
		Name: "MY_POTA_REF",
		Type: POTARefListDataType,
	}
	// MyRigField is a String, description of the logging station's equipment.
	MyRigField = Field{
		Name: "MY_RIG",
		Type: StringDataType,
	}
	// MyRigIntlField is a IntlString, description of the logging station's equipment.
	MyRigIntlField = Field{
		Name: "MY_RIG_INTL",
		Type: IntlStringDataType,
	}
	// MySigField is a String, special interest activity or event.
	MySigField = Field{
		Name: "MY_SIG",
		Type: StringDataType,
	}
	// MySigIntlField is a IntlString, special interest activity or event.
	MySigIntlField = Field{
		Name: "MY_SIG_INTL",
		Type: IntlStringDataType,
	}
	// MySigInfoField is a String, special interest activity or event information.
	MySigInfoField = Field{
		Name: "MY_SIG_INFO",
		Type: StringDataType,
	}
	// MySigInfoIntlField is a IntlString, special interest activity or event information.
	MySigInfoIntlField = Field{
		Name: "MY_SIG_INFO_INTL",
		Type: IntlStringDataType,
	}
	// MySotaRefField is a SOTARef, the logging station's International SOTA Reference..
	MySotaRefField = Field{
		Name: "MY_SOTA_REF",
		Type: SOTARefDataType,
	}
	// MyStateField is a Enumeration, the code for the logging station's Primary Administrative Subdivision (e.g. US State, JA Island, VE Province).
	MyStateField = Field{
		Name:      "MY_STATE",
		Type:      EnumerationDataType,
		EnumName:  "Primary_Administrative_Subdivision",
		EnumScope: "MY_DXCC",
	}
	// MyStreetField is a String, the logging station's street.
	MyStreetField = Field{
		Name: "MY_STREET",
		Type: StringDataType,
	}
	// MyStreetIntlField is a IntlString, the logging station's street.
	MyStreetIntlField = Field{
		Name: "MY_STREET_INTL",
		Type: IntlStringDataType,
	}
	// MyUsacaCountiesField is a SecondarySubdivisionList, two US counties in the case where the logging station is located on a border between two counties, representing counties that the contacted station may claim for the CQ Magazine USA-CA award program. E.g. MA,Franklin:MA,Hampshire.
	MyUsacaCountiesField = Field{
		Name: "MY_USACA_COUNTIES",
		Type: SecondarySubdivisionListDataType,
	}
	// MyVuccGridsField is a GridSquareList, two or four adjacent Maidenhead grid locators, each four characters long, representing the logging station's grid squares that the contacted station may claim for the ARRL VUCC award program. E.g. EN98,FM08,EM97,FM07.
	MyVuccGridsField = Field{
		Name: "MY_VUCC_GRIDS",
		Type: GridSquareListDataType,
	}
	// MyWwffRefField is a WWFFRef, the logging station's WWFF (World Wildlife Flora & Fauna) reference.
	MyWwffRefField = Field{
		Name: "MY_WWFF_REF",
		Type: WWFFRefDataType,
	}
	// NameField is a String, the contacted station's operator's name.
	NameField = Field{
		Name: "NAME",
		Type: StringDataType,
	}
	// NameIntlField is a IntlString, the contacted station's operator's name.
	NameIntlField = Field{
		Name: "NAME_INTL",
		Type: IntlStringDataType,
	}
	// NotesField is a MultilineString, QSO notes recommended use: information of interest to the logging station's operator.
	NotesField = Field{
		Name: "NOTES",
		Type: MultilineStringDataType,
	}
	// NotesIntlField is a IntlMultilineString, QSO notes recommended use: information of interest to the logging station's operator.
	NotesIntlField = Field{
		Name: "NOTES_INTL",
		Type: IntlMultilineStringDataType,
	}
	// NrBurstsField is a Integer, the number of meteor scatter bursts heard by the logging station with a value greater than or equal to 0.
	NrBurstsField = Field{
		Name:    "NR_BURSTS",
		Type:    IntegerDataType,
		Minimum: "0",
	}
	// NrPingsField is a Integer, the number of meteor scatter pings heard by the logging station with a value greater than or equal to 0.
	NrPingsField = Field{
		Name:    "NR_PINGS",
		Type:    IntegerDataType,
		Minimum: "0",
	}
	// OperatorField is a String, the logging operator's callsign if STATION_CALLSIGN is absent, OPERATOR shall be treated as both the logging station's callsign and the logging operator's callsign.
	OperatorField = Field{
		Name: "OPERATOR",
		Type: StringDataType,
	}
	// OwnerCallsignField is a String, the callsign of the owner of the station used to log the contact (the callsign of the OPERATOR's host) if OWNER_CALLSIGN is absent, STATION_CALLSIGN shall be treated as both the logging station's callsign and the callsign of the owner of the station.
	OwnerCallsignField = Field{
		Name: "OWNER_CALLSIGN",
		Type: StringDataType,
	}
	// PfxField is a String, the contacted station's WPX prefix.
	PfxField = Field{
		Name: "PFX",
		Type: StringDataType,
	}
	// PotaRefField is a POTARefList, a comma-delimited list of one or more of the contacted station's POTA (Parks on the Air) reference(s). Examples: <POTA_REF:6>K-5033 <POTA_REF:13>VE-5082@CA-AB <POTA_REF:40>K-0817,K-4566,K-4576,K-4573,K-4578@US-WY.
	PotaRefField = Field{
		Name: "POTA_REF",
		Type: POTARefListDataType,
	}
	// PrecedenceField is a String, contest precedence (e.g. for ARRL Sweepstakes).
	PrecedenceField = Field{
		Name: "PRECEDENCE",
		Type: StringDataType,
	}
	// PropModeField is a Enumeration, QSO propagation mode.
	PropModeField = Field{
		Name:     "PROP_MODE",
		Type:     EnumerationDataType,
		EnumName: "Propagation_Mode",
	}
	// PublicKeyField is a String, public encryption key.
	PublicKeyField = Field{
		Name: "PUBLIC_KEY",
		Type: StringDataType,
	}
	// QrzcomQsoUploadDateField is a Date, the date the QSO was last uploaded to the QRZ.COM online service.
	QrzcomQsoUploadDateField = Field{
		Name: "QRZCOM_QSO_UPLOAD_DATE",
		Type: DateDataType,
	}
	// QrzcomQsoUploadStatusField is a Enumeration, the upload status of the QSO on the QRZ.COM online service.
	QrzcomQsoUploadStatusField = Field{
		Name:     "QRZCOM_QSO_UPLOAD_STATUS",
		Type:     EnumerationDataType,
		EnumName: "QSO_Upload_Status",
	}
	// QslmsgField is a MultilineString, QSL card message.
	QslmsgField = Field{
		Name: "QSLMSG",
		Type: MultilineStringDataType,
	}
	// QslmsgIntlField is a IntlMultilineString, QSL card message.
	QslmsgIntlField = Field{
		Name: "QSLMSG_INTL",
		Type: IntlMultilineStringDataType,
	}
	// QslrdateField is a Date, QSL received date (only valid if QSL_RCVD is Y, I, or V)(V import-only).
	QslrdateField = Field{
		Name: "QSLRDATE",
		Type: DateDataType,
	}
	// QslsdateField is a Date, QSL sent date (only valid if QSL_SENT is Y, Q, or I).
	QslsdateField = Field{
		Name: "QSLSDATE",
		Type: DateDataType,
	}
	// QslRcvdField is a Enumeration, QSL received status instead of V (import-only) use <CREDIT_GRANTED:39>DXCC:card,DXCC_BAND:card,DXCC_MODE:card Default Value: N.
	QslRcvdField = Field{
		Name:     "QSL_RCVD",
		Type:     EnumerationDataType,
		EnumName: "QSL_Rcvd",
	}
	// QslRcvdViaField is a Enumeration, if QSL_RCVD is set to 'Y' or 'V', the means by which the QSL was received by the logging station; otherwise, the means by which the logging station requested or intends to request that the QSL be conveyed. (Note: 'V' is import-only) use of M (manager) is import-only.
	QslRcvdViaField = Field{
		Name:     "QSL_RCVD_VIA",
		Type:     EnumerationDataType,
		EnumName: "QSL_Via",
	}
	// QslSentField is a Enumeration, QSL sent status Default Value: N.
	QslSentField = Field{
		Name:     "QSL_SENT",
		Type:     EnumerationDataType,
		EnumName: "QSL_Sent",
	}
	// QslSentViaField is a Enumeration, if QSL_SENT is set to 'Y', the means by which the QSL was sent by the logging station; otherwise, the means by which the logging station intends to convey the QSL use of M (manager) is import-only.
	QslSentViaField = Field{
		Name:     "QSL_SENT_VIA",
		Type:     EnumerationDataType,
		EnumName: "QSL_Via",
	}
	// QslViaField is a String, the contacted station's QSL route.
	QslViaField = Field{
		Name: "QSL_VIA",
		Type: StringDataType,
	}
	// QsoCompleteField is a Enumeration, indicates whether the QSO was complete from the perspective of the logging station Y - yes N - no NIL - not heard ? - uncertain.
	QsoCompleteField = Field{
		Name:     "QSO_COMPLETE",
		Type:     EnumerationDataType,
		EnumName: "QSO_Complete",
	}
	// QsoDateField is a Date, date on which the QSO started.
	QsoDateField = Field{
		Name: "QSO_DATE",
		Type: DateDataType,
	}
	// QsoDateOffField is a Date, date on which the QSO ended.
	QsoDateOffField = Field{
		Name: "QSO_DATE_OFF",
		Type: DateDataType,
	}
	// QsoRandomField is a Boolean, indicates whether the QSO was random or scheduled.
	QsoRandomField = Field{
		Name: "QSO_RANDOM",
		Type: BooleanDataType,
	}
	// QthField is a String, the contacted station's city.
	QthField = Field{
		Name: "QTH",
		Type: StringDataType,
	}
	// QthIntlField is a IntlString, the contacted station's city.
	QthIntlField = Field{
		Name: "QTH_INTL",
		Type: IntlStringDataType,
	}
	// RegionField is a Enumeration, the contacted station's WAE or CQ entity contained within a DXCC entity. the value None indicates that the WAE or CQ entity is the DXCC entity in the DXCC field. nothing can be inferred from the absence of the REGION field.
	RegionField = Field{
		Name:     "REGION",
		Type:     EnumerationDataType,
		EnumName: "Region",
	}
	// RigField is a MultilineString, description of the contacted station's equipment.
	RigField = Field{
		Name: "RIG",
		Type: MultilineStringDataType,
	}
	// RigIntlField is a IntlMultilineString, description of the contacted station's equipment.
	RigIntlField = Field{
		Name: "RIG_INTL",
		Type: IntlMultilineStringDataType,
	}
	// RstRcvdField is a String, signal report from the contacted station.
	RstRcvdField = Field{
		Name: "RST_RCVD",
		Type: StringDataType,
	}
	// RstSentField is a String, signal report sent to the contacted station.
	RstSentField = Field{
		Name: "RST_SENT",
		Type: StringDataType,
	}
	// RxPwrField is a Number, the contacted station's transmitter power in Watts with a value greater than or equal to 0.
	RxPwrField = Field{
		Name:    "RX_PWR",
		Type:    NumberDataType,
		Minimum: "0",
	}
	// SatModeField is a String, satellite mode - a code representing the satellite's uplink band and downlink band.
	SatModeField = Field{
		Name: "SAT_MODE",
		Type: StringDataType,
	}
	// SatNameField is a String, name of satellite.
	SatNameField = Field{
		Name: "SAT_NAME",
		Type: StringDataType,
	}
	// SfiField is a Integer, the solar flux at the time of the QSO in the range 0 to 300 (inclusive)..
	SfiField = Field{
		Name:    "SFI",
		Type:    IntegerDataType,
		Minimum: "0",
		Maximum: "300",
	}
	// SigField is a String, the name of the contacted station's special activity or interest group.
	SigField = Field{
		Name: "SIG",
		Type: StringDataType,
	}
	// SigIntlField is a IntlString, the name of the contacted station's special activity or interest group.
	SigIntlField = Field{
		Name: "SIG_INTL",
		Type: IntlStringDataType,
	}
	// SigInfoField is a String, information associated with the contacted station's activity or interest group.
	SigInfoField = Field{
		Name: "SIG_INFO",
		Type: StringDataType,
	}
	// SigInfoIntlField is a IntlString, information associated with the contacted station's activity or interest group.
	SigInfoIntlField = Field{
		Name: "SIG_INFO_INTL",
		Type: IntlStringDataType,
	}
	// SilentKeyField is a Boolean, 'Y' indicates that the contacted station's operator is now a Silent Key..
	SilentKeyField = Field{
		Name: "SILENT_KEY",
		Type: BooleanDataType,
	}
	// SkccField is a String, the contacted station's Straight Key Century Club (SKCC) member information.
	SkccField = Field{
		Name: "SKCC",
		Type: StringDataType,
	}
	// SotaRefField is a SOTARef, the contacted station's International SOTA Reference..
	SotaRefField = Field{
		Name: "SOTA_REF",
		Type: SOTARefDataType,
	}
	// SrxField is a Integer, contest QSO received serial number with a value greater than or equal to 0.
	SrxField = Field{
		Name:    "SRX",
		Type:    IntegerDataType,
		Minimum: "0",
	}
	// SrxStringField is a String, contest QSO received information use Cabrillo format to convey contest information for which ADIF fields are not specified in the event of a conflict between information in a dedicated contest field and this field, information in the dedicated contest field shall prevail.
	SrxStringField = Field{
		Name: "SRX_STRING",
		Type: StringDataType,
	}
	// StateField is a Enumeration, the code for the contacted station's Primary Administrative Subdivision (e.g. US State, JA Island, VE Province).
	StateField = Field{
		Name:      "STATE",
		Type:      EnumerationDataType,
		EnumName:  "Primary_Administrative_Subdivision",
		EnumScope: "DXCC",
	}
	// StationCallsignField is a String, the logging station's callsign (the callsign used over the air) if STATION_CALLSIGN is absent, OPERATOR shall be treated as both the logging station's callsign and the logging operator's callsign.
	StationCallsignField = Field{
		Name: "STATION_CALLSIGN",
		Type: StringDataType,
	}
	// StxField is a Integer, contest QSO transmitted serial number with a value greater than or equal to 0.
	StxField = Field{
		Name:    "STX",
		Type:    IntegerDataType,
		Minimum: "0",
	}
	// StxStringField is a String, contest QSO transmitted information use Cabrillo format to convey contest information for which ADIF fields are not specified in the event of a conflict between information in a dedicated contest field and this field, information in the dedicated contest field shall prevail.
	StxStringField = Field{
		Name: "STX_STRING",
		Type: StringDataType,
	}
	// SubmodeField is a String, QSO Submode use enumeration values for interoperability.
	SubmodeField = Field{
		Name:      "SUBMODE",
		Type:      StringDataType,
		EnumName:  "Submode",
		EnumScope: "MODE",
	}
	// SwlField is a Boolean, indicates that the QSO information pertains to an SWL report.
	SwlField = Field{
		Name: "SWL",
		Type: BooleanDataType,
	}
	// TenTenField is a PositiveInteger, Ten-Ten number with a value greater than 0.
	TenTenField = Field{
		Name:    "TEN_TEN",
		Type:    PositiveIntegerDataType,
		Minimum: "1",
	}
	// TimeOffField is a Time, HHMM or HHMMSS in UTC in the absence of <QSO_DATE_OFF>, the QSO duration is less than 24 hours. For example, the following is a QSO starting at 14 July 2020 23:55 and finishing at 15 July 2020 01:00: <QSO_DATE:8>20200714 <TIME_ON:4>2355 <TIME_OFF:4>0100.
	TimeOffField = Field{
		Name: "TIME_OFF",
		Type: TimeDataType,
	}
	// TimeOnField is a Time, HHMM or HHMMSS in UTC.
	TimeOnField = Field{
		Name: "TIME_ON",
		Type: TimeDataType,
	}
	// TxPwrField is a Number, the logging station's power in Watts with a value greater than or equal to 0.
	TxPwrField = Field{
		Name:    "TX_PWR",
		Type:    NumberDataType,
		Minimum: "0",
	}
	// UksmgField is a PositiveInteger, the contacted station's UKSMG member number with a value greater than 0.
	UksmgField = Field{
		Name:    "UKSMG",
		Type:    PositiveIntegerDataType,
		Minimum: "1",
	}
	// UsacaCountiesField is a SecondarySubdivisionList, two US counties in the case where the contacted station is located on a border between two counties, representing counties credited to the QSO for the CQ Magazine USA-CA award program. E.g. MA,Franklin:MA,Hampshire.
	UsacaCountiesField = Field{
		Name: "USACA_COUNTIES",
		Type: SecondarySubdivisionListDataType,
	}
	// VeProvField is a String, import-only: use STATE instead.
	VeProvField = Field{
		Name:       "VE_PROV",
		Type:       StringDataType,
		ImportOnly: true,
	}
	// VuccGridsField is a GridSquareList, two or four adjacent Maidenhead grid locators, each four characters long, representing the contacted station's grid squares credited to the QSO for the ARRL VUCC award program. E.g. EN98,FM08,EM97,FM07.
	VuccGridsField = Field{
		Name: "VUCC_GRIDS",
		Type: GridSquareListDataType,
	}
	// WebField is a String, the contacted station's URL.
	WebField = Field{
		Name: "WEB",
		Type: StringDataType,
	}
	// WwffRefField is a WWFFRef, the contacted station's WWFF (World Wildlife Flora & Fauna) reference.
	WwffRefField = Field{
		Name: "WWFF_REF",
		Type: WWFFRefDataType,
	}
)

func init() {
	Fields["ADIF_VER"] = AdifVerField
	Fields["CREATED_TIMESTAMP"] = CreatedTimestampField
	Fields["PROGRAMID"] = ProgramidField
	Fields["PROGRAMVERSION"] = ProgramversionField
	Fields["USERDEFn"] = UserdefnField
	Fields["ADDRESS"] = AddressField
	Fields["ADDRESS_INTL"] = AddressIntlField
	Fields["AGE"] = AgeField
	Fields["ALTITUDE"] = AltitudeField
	Fields["ANT_AZ"] = AntAzField
	Fields["ANT_EL"] = AntElField
	Fields["ANT_PATH"] = AntPathField
	Fields["ARRL_SECT"] = ArrlSectField
	Fields["AWARD_SUBMITTED"] = AwardSubmittedField
	Fields["AWARD_GRANTED"] = AwardGrantedField
	Fields["A_INDEX"] = AIndexField
	Fields["BAND"] = BandField
	Fields["BAND_RX"] = BandRxField
	Fields["CALL"] = CallField
	Fields["CHECK"] = CheckField
	Fields["CLASS"] = ClassField
	Fields["CLUBLOG_QSO_UPLOAD_DATE"] = ClublogQsoUploadDateField
	Fields["CLUBLOG_QSO_UPLOAD_STATUS"] = ClublogQsoUploadStatusField
	Fields["CNTY"] = CntyField
	Fields["COMMENT"] = CommentField
	Fields["COMMENT_INTL"] = CommentIntlField
	Fields["CONT"] = ContField
	Fields["CONTACTED_OP"] = ContactedOpField
	Fields["CONTEST_ID"] = ContestIdField
	Fields["COUNTRY"] = CountryField
	Fields["COUNTRY_INTL"] = CountryIntlField
	Fields["CQZ"] = CqzField
	Fields["CREDIT_SUBMITTED"] = CreditSubmittedField
	Fields["CREDIT_GRANTED"] = CreditGrantedField
	Fields["DARC_DOK"] = DarcDokField
	Fields["DISTANCE"] = DistanceField
	Fields["DXCC"] = DxccField
	Fields["EMAIL"] = EmailField
	Fields["EQ_CALL"] = EqCallField
	Fields["EQSL_QSLRDATE"] = EqslQslrdateField
	Fields["EQSL_QSLSDATE"] = EqslQslsdateField
	Fields["EQSL_QSL_RCVD"] = EqslQslRcvdField
	Fields["EQSL_QSL_SENT"] = EqslQslSentField
	Fields["FISTS"] = FistsField
	Fields["FISTS_CC"] = FistsCcField
	Fields["FORCE_INIT"] = ForceInitField
	Fields["FREQ"] = FreqField
	Fields["FREQ_RX"] = FreqRxField
	Fields["GRIDSQUARE"] = GridsquareField
	Fields["GRIDSQUARE_EXT"] = GridsquareExtField
	Fields["GUEST_OP"] = GuestOpField
	Fields["HAMLOGEU_QSO_UPLOAD_DATE"] = HamlogeuQsoUploadDateField
	Fields["HAMLOGEU_QSO_UPLOAD_STATUS"] = HamlogeuQsoUploadStatusField
	Fields["HAMQTH_QSO_UPLOAD_DATE"] = HamqthQsoUploadDateField
	Fields["HAMQTH_QSO_UPLOAD_STATUS"] = HamqthQsoUploadStatusField
	Fields["HRDLOG_QSO_UPLOAD_DATE"] = HrdlogQsoUploadDateField
	Fields["HRDLOG_QSO_UPLOAD_STATUS"] = HrdlogQsoUploadStatusField
	Fields["IOTA"] = IotaField
	Fields["IOTA_ISLAND_ID"] = IotaIslandIdField
	Fields["ITUZ"] = ItuzField
	Fields["K_INDEX"] = KIndexField
	Fields["LAT"] = LatField
	Fields["LON"] = LonField
	Fields["LOTW_QSLRDATE"] = LotwQslrdateField
	Fields["LOTW_QSLSDATE"] = LotwQslsdateField
	Fields["LOTW_QSL_RCVD"] = LotwQslRcvdField
	Fields["LOTW_QSL_SENT"] = LotwQslSentField
	Fields["MAX_BURSTS"] = MaxBurstsField
	Fields["MODE"] = ModeField
	Fields["MS_SHOWER"] = MsShowerField
	Fields["MY_ALTITUDE"] = MyAltitudeField
	Fields["MY_ANTENNA"] = MyAntennaField
	Fields["MY_ANTENNA_INTL"] = MyAntennaIntlField
	Fields["MY_ARRL_SECT"] = MyArrlSectField
	Fields["MY_CITY"] = MyCityField
	Fields["MY_CITY_INTL"] = MyCityIntlField
	Fields["MY_CNTY"] = MyCntyField
	Fields["MY_COUNTRY"] = MyCountryField
	Fields["MY_COUNTRY_INTL"] = MyCountryIntlField
	Fields["MY_CQ_ZONE"] = MyCqZoneField
	Fields["MY_DXCC"] = MyDxccField
	Fields["MY_FISTS"] = MyFistsField
	Fields["MY_GRIDSQUARE"] = MyGridsquareField
	Fields["MY_GRIDSQUARE_EXT"] = MyGridsquareExtField
	Fields["MY_IOTA"] = MyIotaField
	Fields["MY_IOTA_ISLAND_ID"] = MyIotaIslandIdField
	Fields["MY_ITU_ZONE"] = MyItuZoneField
	Fields["MY_LAT"] = MyLatField
	Fields["MY_LON"] = MyLonField
	Fields["MY_NAME"] = MyNameField
	Fields["MY_NAME_INTL"] = MyNameIntlField
	Fields["MY_POSTAL_CODE"] = MyPostalCodeField
	Fields["MY_POSTAL_CODE_INTL"] = MyPostalCodeIntlField
	Fields["MY_POTA_REF"] = MyPotaRefField
	Fields["MY_RIG"] = MyRigField
	Fields["MY_RIG_INTL"] = MyRigIntlField
	Fields["MY_SIG"] = MySigField
	Fields["MY_SIG_INTL"] = MySigIntlField
	Fields["MY_SIG_INFO"] = MySigInfoField
	Fields["MY_SIG_INFO_INTL"] = MySigInfoIntlField
	Fields["MY_SOTA_REF"] = MySotaRefField
	Fields["MY_STATE"] = MyStateField
	Fields["MY_STREET"] = MyStreetField
	Fields["MY_STREET_INTL"] = MyStreetIntlField
	Fields["MY_USACA_COUNTIES"] = MyUsacaCountiesField
	Fields["MY_VUCC_GRIDS"] = MyVuccGridsField
	Fields["MY_WWFF_REF"] = MyWwffRefField
	Fields["NAME"] = NameField
	Fields["NAME_INTL"] = NameIntlField
	Fields["NOTES"] = NotesField
	Fields["NOTES_INTL"] = NotesIntlField
	Fields["NR_BURSTS"] = NrBurstsField
	Fields["NR_PINGS"] = NrPingsField
	Fields["OPERATOR"] = OperatorField
	Fields["OWNER_CALLSIGN"] = OwnerCallsignField
	Fields["PFX"] = PfxField
	Fields["POTA_REF"] = PotaRefField
	Fields["PRECEDENCE"] = PrecedenceField
	Fields["PROP_MODE"] = PropModeField
	Fields["PUBLIC_KEY"] = PublicKeyField
	Fields["QRZCOM_QSO_UPLOAD_DATE"] = QrzcomQsoUploadDateField
	Fields["QRZCOM_QSO_UPLOAD_STATUS"] = QrzcomQsoUploadStatusField
	Fields["QSLMSG"] = QslmsgField
	Fields["QSLMSG_INTL"] = QslmsgIntlField
	Fields["QSLRDATE"] = QslrdateField
	Fields["QSLSDATE"] = QslsdateField
	Fields["QSL_RCVD"] = QslRcvdField
	Fields["QSL_RCVD_VIA"] = QslRcvdViaField
	Fields["QSL_SENT"] = QslSentField
	Fields["QSL_SENT_VIA"] = QslSentViaField
	Fields["QSL_VIA"] = QslViaField
	Fields["QSO_COMPLETE"] = QsoCompleteField
	Fields["QSO_DATE"] = QsoDateField
	Fields["QSO_DATE_OFF"] = QsoDateOffField
	Fields["QSO_RANDOM"] = QsoRandomField
	Fields["QTH"] = QthField
	Fields["QTH_INTL"] = QthIntlField
	Fields["REGION"] = RegionField
	Fields["RIG"] = RigField
	Fields["RIG_INTL"] = RigIntlField
	Fields["RST_RCVD"] = RstRcvdField
	Fields["RST_SENT"] = RstSentField
	Fields["RX_PWR"] = RxPwrField
	Fields["SAT_MODE"] = SatModeField
	Fields["SAT_NAME"] = SatNameField
	Fields["SFI"] = SfiField
	Fields["SIG"] = SigField
	Fields["SIG_INTL"] = SigIntlField
	Fields["SIG_INFO"] = SigInfoField
	Fields["SIG_INFO_INTL"] = SigInfoIntlField
	Fields["SILENT_KEY"] = SilentKeyField
	Fields["SKCC"] = SkccField
	Fields["SOTA_REF"] = SotaRefField
	Fields["SRX"] = SrxField
	Fields["SRX_STRING"] = SrxStringField
	Fields["STATE"] = StateField
	Fields["STATION_CALLSIGN"] = StationCallsignField
	Fields["STX"] = StxField
	Fields["STX_STRING"] = StxStringField
	Fields["SUBMODE"] = SubmodeField
	Fields["SWL"] = SwlField
	Fields["TEN_TEN"] = TenTenField
	Fields["TIME_OFF"] = TimeOffField
	Fields["TIME_ON"] = TimeOnField
	Fields["TX_PWR"] = TxPwrField
	Fields["UKSMG"] = UksmgField
	Fields["USACA_COUNTIES"] = UsacaCountiesField
	Fields["VE_PROV"] = VeProvField
	Fields["VUCC_GRIDS"] = VuccGridsField
	Fields["WEB"] = WebField
	Fields["WWFF_REF"] = WwffRefField
}
